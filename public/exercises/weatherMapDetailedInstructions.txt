================================= EXERCISE ASSIGNMENT ==============================
1. Create a new html file called weather_map.html.

2. Using HTML, CSS, jQuery, ajax, and the OpenWeatherMap API, start by showing the current conditions for San Antonio on your page.

3. Update your layout and ajax request(s) to display a three day forecast for San Antonio that looks like the screenshot below. 
Hint: The URLs for OpenWeatherMap's icons are formatted http://openweathermap.org/img/w/[icon].png where [icon] comes from the API request.

4. Create input boxes for "Latitude" and "Longitude" and a <button> that will take the values from those inputs and feed them into your API request. Use Google Maps to find the coordinates for different places around the world and test this out.

5.Go back to your Google Maps API exercise. Recreate the map below your 3 day forecast. Read through the documentation for the Google Maps API and figure out how to allow the user to drop a pin on any place on the map. Once the user drops a pin, grab its coordinates and feed those into your OpenWeatherMap API. Update the three day forecast with the information from those coordinates (you should also get rid of your input boxes at this point).
*/

================================= OPEN WEATHER MAP / GOOGLE MAPS PROJECT STEPS ====================

// MAKE THE WEATHER FORECAST

	// make a function to get the weather object from the OpenWeatherMap API

		// base url should be "http://api.openweathermap.org/data/2.5/forecast/daily"

		// parameter cnt controls how many days of forecasts will be returned as an array of objects

		// practice writing console.logs of various parts of the OpenWeatherMap object...
			// console.log the humidity of the 2nd day
			// console.log the humidity of all the days (maybe use .forEach?)
			// console.log the temperature of the 3rd day in celsius
			// console.log the temperature of the 3rd day in Fahrenheit
			// console.log all types of information you will ultimately display for a single day in the 3-day forecast div
			// console.log all type of information you will ultimately display for all days in the 3-day forecast divs

	// write html and css to make/style a three-day forecast set of divs (may use design from curriculum)

	// create a function to append specific parts of the OpenWeatherMap map object to the DOM and call it in the .done() of the OpenWeatherMap map GET request.

		// remember to first console.log specific data from the OpenWeatherMap object, then work on adding to the DOM

		// read and reread the curriculum and OpenWeatherMap docs carefully on how to get an image of the weather forecast

			// hint: "http://openweathermap.org/img/w/" + whateverTheWeatherIconValueIs

	// verify that the OpenWeatherMap data populates by hard coding in lat and lon values

	// create lat and lon variables to hold lat and lon values.

	// add lat and lon properties to the function that calls the OpenWeatheMap API GET request

	// add an input field for lat and lon with button that fires a new request to the OpenWeatherMap API and passes the lat and lon values from the input fields into the request.



// CREATE THE GOOGLE MAP

	// using syntax from the previous Google Maps exercise, add a map below the OpenWeatherMap forecast

	// add a marker to the map and make it draggable

	// create a marker drag event that console logs the lat and lon where the marker is dropped



// WIRE UP GOOGLE MAP TO WEATHER API

	// add the function call that makes the Weather API request to the marker drag event and pass in the lat and lon values of the marker to the Weather API request function


==============================================================================================
PSEUDO CODE PLANNING

#2. Using HTML, CSS, jQuery, ajax, and the OpenWeatherMap API, start by showing the current conditions for San Antonio on your page.

	* Make a get request to include the APPID
		API CALL: "https://api.openweathermap.org/data/2.5/weather?lat=35&lon=139"
		APPID: c66968e340ab3c75ff622d91dae73b31
		q: "San Antonio, TX"

	* Identify required data elements from the API:
		* "weather" - id, main, description, & icon
		* "main" - temp, humidity, pressure, temp_min, temp_max (set to Imperial for Fahrenheit)
		* "wind" - speed, deg
		* "rain"
		* "clouds"
		* "dt"
		* "id"
		* "name"
		* "cod"


#3. Update your layout and ajax request(s) to display a three day forecast for San Antonio that looks like the screenshot below. 
Hint: The URLs for OpenWeatherMap's icons are formatted http://openweathermap.org/img/w/[icon].png where [icon] comes from the API request.
	
	API CALL: api.openweathermap.org/data/2.5/forecast/daily?q={city name},{country code}&cnt={cnt}
	APPID KEY: c66968e340ab3c75ff622d91dae73b31
	q: "San Antonio, TX"

4. Create input boxes for "Latitude" and "Longitude" and a <button> that will take the values from those inputs and feed them into your API request. Use Google Maps to find the coordinates for different places around the world and test this out.

			lat & lon for San Antonio:
				lat: 29.4241
				lon:-98.4937
	use a (document.getElementById) to retrieve the data elements from the input fields

			api.openweathermap.org/data/2.5/forecast/daily?q=San Antonio,200&cnt=3"
--(use for the function to get data & click event function for the button)

5.Go back to your Google Maps API exercise. Recreate the map below your 3 day forecast. Read through the documentation for the Google Maps API and figure out how to allow the user to drop a pin on any place on the map. Once the user drops a pin, grab its coordinates and feed those into your OpenWeatherMap API. Update the three day forecast with the information from those coordinates (you should also get rid of your input boxes at this point).
*/


==================NOTES==================
ICON EXAMPLE:
http://openweathermap.org/img/w/10d.png

example API for 3 day forecast:
api.openweathermap.org/data/2.5/forecast/daily?lat=35&lon=139&cnt=3

API for map: (is the X & Y the latitude & longitude)
"http://tile.openweathermap.org/map/temp_new/19/{x}/{y}.png?appid=40ba7777b52dad7589a9efb71eceb30a"

====================== DRAFTS =======================

  		function getCurrent(weather) {
            var weather = data [0] 
       }
            data.forEach(function(weather){
                    
       );
	//function getCurrent(data) { //current temperature
			/*		$.get("http://api.openweathermap.org/data/2.5/weather?id=2172797", {
					 		APPID: "40ba7777b52dad7589a9efb71eceb30a",
					 		q: "San Antonio, TX",
							units: "imperial"

						}).done(function(data) {
					 		console.log(data.main.temp);

			     		}).fail(function(data, status, error) {
			                     console.log("Error " + error);
			                     console.log(data);
			            });	
			        });	  */

		    		// data.forEach(function(data){
		      //               $("#current").append(
		      //               	"<p>" + data.weather + 
		      //               	"<div>" + data.city.name + "</div>" +
		      //               	"<div>" + data.dt + "</div>" +
		      //               	"<div>" + data.main.temp + "</div>" +
		      //               	"<div>" + data.main.humidity + "</div>" +
		      //               	"</p>"
		      //               );
        //             	}); 

		============================================================
            		
					// $.("#refreshc").click(function(data){
			  //    	     location.reload();
				 //       	});
					// });



=======WORKING STATEMENT TO RETRIEVE CURRENT WEATHER:===================

	$.get("http://api.openweathermap.org/data/2.5/weather?id=2172797", {
		APPID: "40ba7777b52dad7589a9efb71eceb30a",
		q: "San Antonio, TX",
		units: "imperial"

		}).done(function(data) {
			console.log(data.main.temp);	

		}).fail(function(data, status, error) {
	        console.log("Error " + error);
	        console.log(data);
        });	
    });	
========================================================================
WORKING CODE TO CAPTURE 3 DAY FORECAST IN SAN ANTONIO:

$.get("http://api.openweathermap.org/data/2.5/forecast/daily?q=San Antonio,200&cnt=3", {
  		       		APPID: "40ba7777b52dad7589a9efb71eceb30a",
					q: "San Antonio, TX",
					units: "imperial",
					lat: "29.428074",
					lon: "-98.489158",

					}).done(function(data) {
			   				console.log(data);
			   				console.log(data.city.name); 
			   				console.log(data.city.coord);
			   				console.log(data.list[0].temp);
			   				console.log(data.city.coord.lat);
			   				console.log(data.city.coord.lon);
			   				getForecast(data);

			   		}).fail(function(data, status, error) {
			   				console.log("Error " + error);
			   				console.log(data);
			   		});

			   		function getForecast(data){
			            $("#forecast").append(
			            	"<h2>" + data.city.name + "</h2>" +
			            	"<div class='col-md-4'>" + "TODAY" +
			                "<div>" + data.list[0].temp.min + "째" + "/ " + data.list[0].temp.max + "째" + "</div>" +
			                "<div>" + data.list[0].weather[0].main + ":" + data.list[0].weather[0].description + "</div>" +
			                "<div>" + "Humidity: " + data.list[0].humidity + "</div>" +
			                "<div>" + "Wind: " + data.list[0].speed + "</div>" +
			                "<div>" + "Pressure: " + data.list[0].pressure + "</div>" +
			                "</div>" +
			                
			            	"<div class='col-md-4'>" + "TOMORROW" +
			                "<div>" + data.list[1].temp.min + "째" + "/ " + data.list[1].temp.max + "째" + "</div>" +
			                "<div>" + data.list[1].weather[0].main + ":" + data.list[1].weather[0].description + "</div>" +
			                "<div>" + "Humidity: " + data.list[1].humidity + "</div>" +
			                "<div>" + "Wind: " + data.list[1].speed + "</div>" +
			                "<div>" + "Pressure: " + data.list[1].pressure + "</div>" +
			                "</div>" +
			               

			                "<div class='col-md-4'>" + "DAY 3" +
			                "<div>" + data.list[2].temp.min + "째" + "/ " + data.list[2].temp.max + "째" + "</div>" +
			                "<div>" + data.list[2].weather[0].main + ":" + data.list[2].weather[0].description + "</div>" +
			                "<div>" + "Humidity: " + data.list[2].humidity + "</div>" +
			                "<div>" + "Wind: " + data.list[2].speed + "</div>" +
			                "<div>" + "Pressure: " + data.list[2].pressure + "</div>" +
			                "</div>" 
			                );
	                 	}; 	
======================================================================================================



<script src="js/weather-api.js"></script> 


ADDITIONAL EXAMPLES:

<script>
        
    $.ajax("http://api.openweathermap.org/data/2.5/forecast/daily", {
    data: {
        APPID: "a9f54c1676a97f64d7aeeea392274f52",
        lat:    29.423017,
        lon:   -98.48527,
        units: "imperial"
    }
    }).done(function(data) {
        console.log(data.list[0].temp.min);
        console.log(data.list[0].temp.max);
        loadBox(data);
   });
    
    function loadBox(data){
        var content = "";
            content += "<h4>" + data.list[0].temp.max;
            content += "/" + data.list[0].temp.min + "</h4>";
            content
            content... etc.
            $('#panel').html(content); 
      
    }
 
    </script>

==========================================
	function getForecast(data){
			                $("#current").append(
			                    "<p>" + data.weather + 
			                   	"<div>" + data.city.name + "</div>" +
			                    "<div>" + data.dt + "</div>" +
			                  	"<div>" + data.list.temp + "</div>" +
			                	"<div>" + data.list.humidity + "</div>" +
			                	"</p>"
			                );
	                 	}; 



